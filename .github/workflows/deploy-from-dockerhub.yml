name: deploy-from-dockerhub

on:
  workflow_call:
    inputs:
      runner_name:
        required: true
        type: string
      domain:
        required: true
        type: string
      IMAGE_TAG:
        required: true
        type: string
      
    secrets:
      HUB_REPO_BACKEND:
        required: true
      HUB_REPO_FRONTEND:
        required: true
env:
  HUB_REPO_BACKEND: "${{ secrets.HUB_REPO_BACKEND }}"
  HUB_REPO_FRONTEND: "${{ secrets.HUB_REPO_FRONTEND }}"
  DOMAIN:    "${{ inputs.domain }}"
  IMAGE_TAG: "${{ inputs.IMAGE_TAG }}"
jobs:
  deploy-from-dockerhub:
    runs-on: [self-hosted, '${{ inputs.runner_name }}']
    timeout-minutes: 60
    steps:
    # - name: Pull new code (rm old; clone new)
    #   run:  |
    #     rm -rf ~/build
    #     mkdir ~/build/ ; cd /build/
    #     httpsPathWithToken=`echo ${{github.repositoryUrl}} | awk '{ gsub(/git:\/\//, "\n" ); print "https://${{github.token}}@" $1; }'`
    #     echo Cloning from: $httpsPathWithToken
    #     git clone $httpsPathWithToken repo
    #     echo "::warning file=deploy-from-dockerhub.yml,title=Need Branch::Must make deployment script smart enough to pick the correct branch"
    - name: Checkout this code
      uses: actions/checkout@v3.5.0
      # Checkout the code, not into a container, because all work here is not in a container
      with:
        fetch-depth: 50
    - name: Copy server's existing config file into local path before deployment
      run:  |
        cp /var/cbr/.env ./.env
      # working-directory: ~/build/
    - name: Pull docker images from Docker Hub
      run:  |
        docker compose -f docker-compose.yml -f docker-compose.deploy.yml pull
      # working-directory: ~/build/
    - name: Launch the server
      run:  |
        docker compose -f docker-compose.yml -f docker-compose.deploy.yml up -d
      # working-directory: ~/build/
    - name: Cleanup unused docker images
      run:  |
        docker image prune -f
      # working-directory: ~/build/
    - name: Apply migrations (once server is up)
      run:  |
        bash -c 'sleep 15'
        docker exec cbr_django python manage.py migrate
      # working-directory: ~/build/
    - name: View state at end of deployment script
      run:  |
        docker images
        docker ps -a
        docker volume ls
      # working-directory: ~/build/
